<html>

<head>
	<title>BKR Meeting</title>
	<meta name="viewport" content="width=device-width, initial-scale=1" charset="utf-8">
	</meta>
	<link rel="shortcut icon" href="images/favicon.ico" type="image/x-icon">
	</link>
	<script src="https://code.jquery.com/jquery-3.3.1.min.js"
		integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
		integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
	</link>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
		integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
		crossorigin="anonymous"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	</link>
	<link rel="styleSheet" href="/static/session/css/main.css" type="text/css" media="screen">
	</link>
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
	<script src="/static/session/js/openvidu-browser-2.13.0.js"></script>
</head>

<body>
	<div id="sidePanel" class="sidepanel">
		<button class="closebtn btn btn-light" style="font-size:200%" type="button" onclick="closeSidePanel()">&times;</button>
		<div id="extraOptions" class="card" style="background-color:#bfbfbf;">
			<div class="card-body" style="padding: 20px; margin: 20px;">
				<div class="row">
					<div class="col">
						<button class="btn btn-primary" type="button" onclick="screenShare()">
							<i class="material-icons" style="font-size:170%">screen_share</i>
						</button>
					</div>
				</div>
			</div>
		</div>
		<div id="messages" class="card">
			<div class="card-header" style="text-align:center;">
				<i class="material-icons" style="font-size: 300%;">chat</i>
			</div>
			<div class="card-body" id="messages_body" style="margin-top: 30px;">
				<div style="text-align:center"><p>Chat Initialized</p></div>
			</div>
		</div>
		<div class="fixed-bottom" style="position: fixed; bottom:0; width: 100%;">
			<div class="card" style="margin:10px">
				<div class="card-body">
					<form class="form-inline" action="javascript:void(0)" autocomplete="off">
						<div class="form-group">
							<input type="text" placeholder="Enter You Message" class="form-control" id="message_to_send">
						</div>
						<button type="submit" class="btn btn-primary" style="margin-left:10px" onclick="sendMessage()">
							<span class="glyphicon glyphicon-send"></span> Send
						</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div id="main-container" class="container">
		<div id="logged">
			<div id="session">
				<div id="session-header">
					<h1 id="session-title" style="margin-top:20px"><%= sessionName %></h1>
					<button class="btn btn-light" type="button" id="dropdownMenuButton"
					 	onclick="openSidePanel()">
						<i class="material-icons" style="font-size:230%;">more_vert</i>
					</button>
					<form action="/leave-session" method="post">
						<input type="hidden" name="sessionname" value="<%= sessionName %>"></input>
						<input type="hidden" name="token" value="<%= token %>"></input>
						<button id="buttonLeaveSession" class="btn btn-danger btn-circle btn-lg" type="submit" onclick="leaveSession()">
							<i class="material-icons" style="color:white;font-size:130%;">call_end</i>
						</button>
					</form>
					<button id="toggleAudio" class="btn btn-success btn-circle btn-lg" onclick="toggleAudio()">
						<i class="material-icons" id="toggleAudioIcon" style="color:white;font-size:130%;">mic_off</i>
					</button>
					<button id="toggleVideo" class="btn btn-primary btn-circle btn-lg" onclick="toggleVideo()">
						<i class="material-icons" id="toggleVideoIcon" style="color:white;font-size:130%;">videocam_off</i>
					</button>
				</div>
				<div id="main-video" class="col-md-6">
					<p class="nickName"></p>
					<p class="userName"></p>
					<video autoplay="true" playsinline="true"></video>
				</div>
				<div id="video-container" class="col-md-6"></div>
			</div>
		</div>
	</div>

	<script>
		var publisher;
		var sessionName = <%- JSON.stringify(sessionName) %>;
		var token = <%- JSON.stringify(token) %>;
		var nickName = <%- JSON.stringify(nickName) %>;
		var userName = <%- JSON.stringify(userName) %>;
		var audio = true;
		var video = true;

		OV = new OpenVidu();
		session = OV.initSession();

		function sendMessage() {
			session.signal({
				data: nickName + "," + userName + "," + $("#message_to_send").val(),
				to: [],
				type: "chat",
			}).then(() => {
			}).catch((error) => {
			})
			$("#message_to_send").val("");
		}

		function setMessageOut() {
			$("#dropdownMenuButton").html('<i class="material-icons" style="font-size:230%;">more_vert</i>');
		}

		session.on('signal:chat', (event) => {
			var seprated_values = event.data.split(",")
			var from_name = seprated_values[0];
			var from_id = seprated_values[1];
			var message = seprated_values[2];
			var html_string;
			if (from_id === userName.toString()) {
				html_string = '<div class="card"><div class="card-body text-success" style="font-size:150%;"><strong>You: ' + message + ' </strong></div></div>'
			} else {
				html_string = '<div class="card"><div class="card-body text-danger" style="font-size:150%;"><strong>' + from_name + ': ' + message + ' </strong></div></div>'
				$("#dropdownMenuButton").html('<div class="spinner-grow" role="status"><span class="sr-only">New Message</span></div>');
				setTimeout(setMessageOut, 1000);
			}
			$("#messages_body").append(html_string);
		})

		session.on('streamCreated', (event) => {
			var subscriber = session.subscribe(event.stream, 'video-container');
			subscriber.on('videoElementCreated', (event) => {
				appendUserData(event.element, subscriber.stream.connection);
			});
		});

		session.on('streamDestroyed', (event) => {
			removeUserData(event.stream.connection);
		});

		session.connect(token, { clientData: nickName })
			.then(() => {
				$('#session-title').text(sessionName);
				$('#join').hide();
				$('#session').show();
				publisher = OV.initPublisher('video-container', {
					audioSource: undefined,
					videoSource: undefined,
					publishAudio: true,
					publishVideo: true,
					resolution: '640x480',
					frameRate: 30,
					insertMode: 'APPEND',
					mirror: false
				});
				publisher.on('videoElementCreated', (event) => {
					var userData = {
						nickName: nickName,
						userName: userName
					};
					initMainVideo(event.element, userData);
					appendUserData(event.element, userData);
					$(event.element).prop('muted', true);
				});
				session.publish(publisher);
			})
			.catch(error => {
				console.warn('There was an error connecting to the session:', error.code, error.message);
			});

		function leaveSession() {
			session.disconnect();
		}

		function toggleAudio() {
			if (audio) {
				audio = false;
				$("#toggleAudioIcon").html("mic")
				publisher.publishAudio(false);
			} else {
				audio = true;
				$("#toggleAudioIcon").html("mic_off")
				publisher.publishAudio(true);
			}
		}

		function toggleVideo() {
			if (video) {
				video = false;
				$("#toggleVideoIcon").html("videocam")
				publisher.publishVideo(false);
			} else {
				video = true;
				$("#toggleVideoIcon").html("videocam_off")
				publisher.publishVideo(true);
			}
		}

		function closeSidePanel() {
			document.getElementById("sidePanel").style.width = "0px";
		}

		function openSidePanel() {
			document.getElementById("sidePanel").style.width = "350px";
		}

		function screenShare() {
			OV.getUserMedia({
				audioSource: undefined,
				videoSource: "screen",
				publishAudio: true,
				publishVideo: true,
				resolution: '640x480',
				frameRate: 30,
				insertMode: 'APPEND',
				mirror: false
			}).then(mediaStream => {
				var screenTrack = mediaStream.getVideoTracks()[0];
				publisher.replaceTrack(screenTrack).then(() => {}).catch((err) => {console.log(err);});
				screenTrack.addEventListener('ended', () => {
					OV.getUserMedia({
						audioSource: undefined,
						videoSource: undefined,
						publishAudio: true,
						publishVideo: true,
						resolution: '640x480',
						frameRate: 30,
						insertMode: 'APPEND',
						mirror: false
					}).then(videoStream => {
						var videoTrack = videoStream.getVideoTracks()[0];
						publisher.replaceTrack(videoTrack).then(() => {}).catch((err) => {console.log(err);});
					})
				})
			}).catch((err) => {console.log(err);})
		}

		function appendUserData(videoElement, connection) {
			var clientData;
			var serverData;
			var nodeId;
			if (connection.nickName) {
				clientData = connection.nickName;
				serverData = connection.userName;
				nodeId = 'main-videodata';
			} else {
				clientData = JSON.parse(connection.data.split('%/%')[0]).clientData;
				serverData = JSON.parse(connection.data.split('%/%')[1]).serverData;
				nodeId = connection.connectionId;
			}
			var dataNode = document.createElement('div');
			dataNode.className = "data-node";
			dataNode.id = "data-" + nodeId;
			dataNode.innerHTML = '<p class="nickName">' + clientData + '</p><p class="userName">' + serverData + '</p><form class="form-inline private_chat" action="javascript:void(0)" autocomplete="off"><div class="form-group"><input type="text" placeholder="Private Chat" class="form-control"></div><button type="submit" class="btn btn-primary" style="margin-left:10px"><span class="glyphicon glyphicon-send"></span> Send</button></form>';
			videoElement.parentNode.insertBefore(dataNode, videoElement.nextSibling);
			addClickListener(videoElement, clientData, serverData);
			if (serverData !== userName) {
				addHoverListner_chat_icon(videoElement, dataNode, clientData, serverData, connection);
			}
		}

		function removeUserData(connection) {
			var userNameRemoved = $("#data-" + connection.connectionId);
			if ($(userNameRemoved).find('p.userName').html() === $('#main-video p.userName').html()) {
				cleanMainVideo();
			}
			$("#data-" + connection.connectionId).remove();
		}

		function removeAllUserData() {
			$(".data-node").remove();
		}

		function cleanMainVideo() {
			$('#main-video video').get(0).srcObject = null;
			$('#main-video p').each(function () {
				$(this).html('');
			});
		}

		function addClickListener(videoElement, clientData, serverData) {
			videoElement.addEventListener('click', function () {
				var mainVideo = $('#main-video video').get(0);
				if (mainVideo.srcObject !== videoElement.srcObject) {
					$('#main-video').fadeOut("fast", () => {
						$('#main-video p.nickName').html(clientData);
						$('#main-video p.userName').html(serverData);
						mainVideo.srcObject = videoElement.srcObject;
						$('#main-video').fadeIn("fast");
					});
				}
			});
		}

		function addHoverListner_chat_icon(videoElement, dataNode_with_chat, nickName_of_user, id_user, connection_object) {
			var form = dataNode_with_chat.querySelector('.private_chat')[0];
			console.log("Hello: df: " + form.innerHTML);
			videoElement.addEventListener('mouseover', function () {
				videoElement.style.opacity = 0.3;
				form.style.opacity = 0.8;
			})
			videoElement.addEventListener('mouseout', function () {
				videoElement.style.opacity = 1;
				form.style.opacity = 0;
			})
		}

		function initMainVideo(videoElement, userData) {
			$('#main-video video').get(0).srcObject = videoElement.srcObject;
			$('#main-video p.nickName').html(userData.nickName);
			$('#main-video p.userName').html(userData.userName);
			$('#main-video video').prop('muted', true);
		}

	</script>
</body>

</html>
